---
- name: "Bulding Dynamic Inventory Of The AutoScaling Group"
  hosts: localhost
  vars_files:
    - key.vars
  tasks:

    - name: "Fetching EC2 instance details from ASG"
      ec2_instance_info:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        filters:
          "tag:aws:autoscaling:groupName": "{{ asg }}"
          instance-state-name: [ "running"]
      register: ec2

    - name: "Print instance details"
      debug:
        var: ec2

    - name: "Creating Dymaic Inventory"
      add_host:
        name: "{{ item.public_ip_address }}"
        groups: "instances"
        ansible_host: "{{ item.public_ip_address }}"
        ansible_port: 22
        ansible_user: "{{ user }}"
        ansible_ssh_private_key_file: "/var/playbook/{{ key }}"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      with_items:
        - "{{ ec2.instances }}" 
  
    - name: "Print ec2 IP's"
      debug:
        msg: "public ip's -> {{ item.public_ip_address }}"
      with_items:
        - "{{ ec2.instances }}"

- name: "Deloying website from Github"
  hosts: instances
  become: true
  serial: 1
  vars_files:
    - app.vars
  tasks:
    
    - name: "Installing required pacages for application"
      yum:
        name:
          - httpd
          - php
          - git

    - name: "Deploymnet application from Git repo"
      git: 
        repo: "{{ git_url }}" 
        dest: "{{ clone_dir }}"
      register: git_repo_status

    - name: "Disabling ELB health check"
      when: git_repo_status.changed == true
      file:
        path: /var/www/html/{{ health_page }}
        state: touch
        mode: 0000

    - name: "Offloading Ec2 instance from ELB"
      when: git_repo_status.changed == true
      pause:
        seconds: "{{ health_time }}"
  
    - name: "Deployment - Copying New Content To App Root"
      when: git_repo_status.changed == true
      copy:
        src: "{{ clone_dir }}"
        dest: /var/www/html/
        remote_src: true

    - name: "Deployment - ReStarting/enabling Application"
      when: git_repo_status.changed == true
      service:
        name: httpd
        state: restarted
        enabled: true

    - name: "Re-enabling ELB health check"
      when: git_repo_status.changed == true
      file:
        path: "/var/www/html/{{ health_page }}"
        state: touch
        mode: 0644

    - name: "Loading Ec2 instance to ELB"
      when: git_repo_status.changed == true
      pause:
        seconds: "{{ health_time }}"    
      
          
